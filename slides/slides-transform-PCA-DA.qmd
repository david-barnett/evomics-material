---
title: "Microbiome data analysis with microViz"
author: "David Barnett"
format: 
  revealjs:
    theme: dark
    transition: fade
    slide-number: true
    scrollable: true
    pause: false
    fig-responsive: false
    history: false
    multiplex: true
editor: source
---

# Part 3: PCA & Differential Abundance {transition="convex"}

```{r message=FALSE}
library(seriation)
library(dplyr)
library(purrr)
library(ggplot2)
library(cowplot)
library(phyloseq)
library(microViz)
```


```{r}
knitr::opts_chunk$set(fig.width = 6, fig.height = 4, dpi = 120)
options(width = 500)
shao19 <- readRDS(here::here('data/shao19.rds'))
shao4 <- shao19 %>% ps_filter(family_role == "child", infant_age == 4)
mice <- readRDS(here::here("data/mice.rds"))
ibd <- readRDS(here::here("data/ibd.rds"))
```


## Datasets {transition="convex"}

```{r}
#| echo: true
shao19
```

```{r}
#| echo: true
mice
```

```{r}
#| echo: true
ibd
```

::: notes
We'll primarily use (parts of) the shao19 data for demonstration.
But during the exercises try exploring the other datasets too, if you want more practice.
:::


## More Dissimilarity {.smaller transition="convex-in convex-out"}

::: fragment
-   **Ecological & Phylogenetic dissimilarities / distances**:
    -   Binary Jaccard
    -   Bray Curtis
    -   UniFrac (unweighted/weighted/generalized)
    -   Others...
:::

::: fragment
-   **Euclidean distances**
    -   Widely used in data science
    -   Useful for microbiome abundance data??
:::


## Euclidean distances

:::: columns
::: {.column width="40%"}

```{r, fig.height=3, fig.width=3}
pq <- data.frame(taxonA = c(1, 4), taxonB = c(6, 2), row.names = c("p", "q"))
pq %>%
  ggplot() +
  geom_point(aes(x = taxonA, y = taxonB), size = 3) +
  coord_fixed(xlim = c(0, 5), ylim = c(0, 6)) +
  geom_segment(x = 1, xend = 4, y = 2, yend = 2, linetype = "dashed") +
  geom_segment(x = 1, xend = 1, y = 2, yend = 6, linetype = "dashed") +
  geom_segment(x = 1, xend = 4, y = 6, yend = 2, color = "red") +
  annotate(
    geom = 'text', x = c(2.5, 0.75, 2.75), y = c(1.75, 4, 4.25), 
    label = c("a", "b", "c"), size = 7
  ) +
  theme_classic() +
  scale_y_continuous(breaks = 0:6)
```
:::

::: {.column width="60%"}

Pythagoras: $c = \sqrt{a^2 + b^2}$

::: fragment 

$$d\left(p, q\right) = \sqrt{\sum _{i=1}^{n_{taxa}} \left( p_{i}-q_{i}\right)^2 }$$

Euclidean distance between samples p and q

:::
::: fragment

```{r}
#| echo: true
dist(pq, method = "euclidean")
```
:::
:::
::::

::: notes
-   What are Euclidean distances? Here is a simple 2-dimensional example - two taxa.
-   2 samples: Pythagoras you probably remember from school $c = \sqrt{a^2 + b^2}$ 
Distance in one dimension, square it, distance in another dimension, square it, add them together, and square root of the result.
-   Euclidean distance is essentially just a generalisation to more dimensions, where each dimension is the counts of one taxon.
-   Test it, indeed you get 5
:::

## NaÃ¯ve Euclidean PCoA {.smaller}

-   Sensitive to sparsity
-   Excessive emphasis on high-abundance taxa

```{r}
#| echo: false
shao4 %>%
  tax_filter(min_prevalence = 2.5 / 100, verbose = FALSE) %>%
  tax_agg(rank = "genus") %>%
  dist_calc(dist = "euclidean") %>%
  ord_calc(method = "PCoA") %>%
  ord_plot(alpha = 0.6, size = 2) +
  theme_classic(12) +
  coord_fixed(0.7) +
  geom_rug(alpha = 0.1)
```

The PCoA looks weird!

::: notes
We shouldn't just use Euclidean distances on the raw data, why?

Sensitive to sparsity (double-zero problem). 
Excessive emphasis on high-abundance taxa.
The PCoA looks weird! Most samples bunched in the middle with spindly projections..
:::

## Taxon Abundance transformations! 

-   Already used:
    -   Compositional (proportions)
    -   Binary (Presence or Absence)

::: fragment 

-   Log transformations
    -   Log~2~, Log~10~, natural log?
:::    
::: fragment
-   Centered Log Ratio - CLR
:::

::: notes
We already did two transformations with `tax_transform()`: binary (for Binary Jaccard distances) and compositional (for barplots).

Now we need log transformations, and the centered-log-ratio, CLR, transformation.
:::


```{r}
# Getting the taxa in abundance order up front
# to keep it consistent across multiple plots
shao4_sorted <- shao4 %>% 
  tax_sort(by = sum, at = "genus", trans = "compositional", tree_warn = FALSE)
```

## Transformations - none

```{r, fig.height=3, fig.width=6}
shao4_sorted %>%
  tax_transform(trans = "identity", rank = "genus") %>%
  comp_heatmap(
    samples = 1:20, taxa = 1:20, grid_lwd = 2, name = "Counts",
    tax_seriation = "Identity", sample_seriation = "Identity"
  )
```

::: notes
First let's look at the abundance again, this time with heatmaps.
Each column is a sample (from an infant), and each row is a taxon.
:::

## Transformations - none - all data!

```{r, fig.height=3, fig.width=6}
shao4_sorted %>%
  tax_transform(trans = "identity", rank = "genus") %>%
  comp_heatmap(tax_seriation = "Identity", sample_seriation = "Identity")
```

::: notes
Too much to show all the taxa (and samples, for this example)
:::

## Transformations - Compositions

```{r, fig.height=3, fig.width=6}
shao4_sorted %>%
  tax_transform(trans = "compositional", rank = "genus") %>%
  comp_heatmap(
    samples = 1:20, taxa = 1:20, grid_lwd = 2, name = "Prop.",
    tax_seriation = "Identity", sample_seriation = "Identity"
  )
```

::: notes
Doesn't actually help us with the problem of excess emphasis on high-abundance features
:::

## Transformations - Binary

```{r, fig.height=3, fig.width=6}
shao4_sorted %>%
  tax_transform(trans = "binary", rank = "genus") %>%
  comp_heatmap(
    samples = 1:20, taxa = 1:20, grid_lwd = 2, name = "Bin.",
    tax_seriation = "Identity", sample_seriation = "Identity"
  )
```

::: notes 
Binary transformation is not really useful here as it discards all abundance info, but nice to show that even though we have picked the top 20 most abundant genera, there are still a lot of zeros.
We need to deal with the zeros, because `log(0)` is undefined.
The solution is to add a small amount to every value (or just every zero), before applying the log transformation.
This small value is often called a pseudo-count.
:::

## Transformations - log10(x+1)

```{r, fig.height=3, fig.width=6}
shao4_sorted %>%
  tax_transform(rank = "genus", trans = "log10", zero_replace = 1) %>%
  comp_heatmap(
    samples = 1:20, taxa = 1:20, grid_lwd = 2, name = "log10\n(x+1)",
    tax_seriation = "Identity", sample_seriation = "Identity"
  )
```

::: notes
What value should we use for the pseudo-count?
One option is to just add 1.
:::

## Transformations - log10(x+"halfmin")

```{r, fig.height=3, fig.width=6}
shao4_sorted %>%
  tax_agg(rank = "genus") %>%
  # tax_transform(trans = 'compositional') %>% # compositional also possible
  tax_transform(trans = "log10", zero_replace = "halfmin", chain = TRUE) %>%
  comp_heatmap(
    samples = 1:20, taxa = 1:20, grid_lwd = 2, name = "log10\nmin/2",
    tax_seriation = "Identity", sample_seriation = "Identity"
  )
```

::: notes
Another popular option is to add half of the smallest observed real value (from across the whole dataset).

People fight about the best zero replacement strategy and some much more complicated methods exist: including generative statistical models.
In practice: keep it simple and record your approach!
:::

## Log10-transformed Euclidean PCoA

```{r}
#| echo: false
shao4 %>%
  tax_filter(min_prevalence = 2.5 / 100, verbose = FALSE) %>%
  tax_agg(rank = "genus") %>%
  tax_transform("log10p") %>% 
  dist_calc(dist = "euclidean") %>%
  ord_calc(method = "PCoA") %>%
  ord_plot(alpha = 0.6, size = 2) +
  theme_classic(12) +
  geom_rug(alpha = 0.1)
```

## Transformations - Centered Log Ratio

```{r, fig.height=3, fig.width=6}
shao4_sorted %>%
  tax_agg(rank = "genus") %>%
  # tax_transform(trans = 'compositional') %>% # compositional also possible
  tax_transform(trans = "clr", zero_replace = "halfmin", chain = TRUE) %>%
  comp_heatmap(
    samples = 1:20, taxa = 1:20, grid_lwd = 2, name = "CLR\nmin/2",
    colors = heat_palette(sym = TRUE),
    tax_seriation = "Identity", sample_seriation = "Identity"
  )
```

::: notes
So I mentioned another transformation.
The Centered-log-ratio transformation

The centered log-ratio (clr) transformation uses the geometric mean of the sample vector as the reference
:::

## Centered Log Ratio tranformation {transition="convex"}

::: incremental

-  What?
    - Calculate geometric mean for each sample
    - Divide each taxon by the geometric mean of each sample
    - Take the natural log

-  Why?
    - The compositional data problem

:::


## Compositional data problem {.smaller transition="convex"}

![](images/gloor-2017.jpg)


Gloor 2017 - Microbiome Datasets are Compositional: and this is not optional.

::: notes
The total number of reads number of sequence counts is not a good measure of microbial biomass.
It is an arbitrary sum, more reads only gets you higher precision and more reliable estimates of the proportions. I mentioned this briefly when we started making bar charts.

In this nice diagram from a paper by Prof Gregory Gloor, we see what this means for data interpretation. First part of B shows true abundance of 2 bacterial taxa in a simple ecosystem. 
Using sample 1 as the reference, if we compare this to sample 2, the true abundance of taxon B has decreased, and A is the same. In sample 3, A has increased, whilst B stays the same.

But from sequencing data we only know the relative abundance. So samples 2 and 3 look identical! 
That is the interpretation problem. But this also causes a statistical problem.

Gloor 2017 is a good read, including the extensive educational supplementary material!.
:::


## {transition="convex"}

![](images/gloor-slide-constant-sum.png)

::: {.notes}
Constant sum, 1000 in this three taxon toy example.
Causes taxa abundances to be appear correlated, on average.
The counts exist in what is called the Aitchison simplex space.
With 3 taxa, this space can be visualised on a ternary diagram, with 3 interconnected axes. 
We need to escape the simplex, back to unconstrained real space, this is what the CLR does.
:::


## {.smaller transition="convex"}

![](images/gloor-clr-slide.jpg)

::: notes

Another slide from Prof Gloor.
X is a sample vector where x1, x2 etc are the counts of each taxon in that sample.

After the CLR transformation, the abundance of each taxon is expressed relative to the other taxa in the sample. This transformation takes us back to real geometric space.

Confused? Don't worry, if you're interested check out that paper by Gloor.
If not just know that you'll often see microbiome data transformed in this way, and it makes the PCoA plots look better.

::: 

## Aitchison PCoA (CLR + Euclidean) {transition="convex"}

```{r}
shao4 %>%
  tax_filter(min_prevalence = 2.5 / 100, verbose = FALSE) %>%
  tax_transform(rank = "genus", trans = "clr", zero_replace = "halfmin") %>%
  dist_calc(dist = "euclidean") %>%
  ord_calc(method = "PCoA") %>%
  ord_plot(alpha = 0.6, size = 2, color = "birth_mode") +
  theme_classic(12) +
  coord_fixed(0.7) +
  scale_y_reverse()
```


## PCA - where's the "o" gone? {.smaller transition="convex"}

Principal Components Analysis (not Co-ordinates)

- Similar aim to PCoA (and name!)
- But doesn't use distances!
- Rotation of original dimensions (taxa)
- Euclidean PCoA equivalent results to PCA

![](images/pca-gif.gif)

## Principal Components Analysis - PCA {transition="convex"}

```{r}
shao4 %>%
  tax_filter(min_prevalence = 2.5 / 100, verbose = FALSE) %>%
  tax_transform(rank = "genus", trans = "clr", zero_replace = "halfmin") %>%
  ord_calc(method = "PCA") %>%
  ord_plot(alpha = 0.6, size = 2, color = "birth_mode") +
  theme_classic(12) +
  coord_fixed(0.7)
```

::: notes
Looks exactly the same as the PCoA plot with CLR euclidean distances.
:::

## PCA provides (taxa) loadings! {transition="convex"}

```{r}
pca <- shao4 %>%
  tax_filter(min_prevalence = 2.5 / 100, verbose = FALSE) %>%
  tax_transform(rank = "genus", trans = "clr", zero_replace = "halfmin") %>%
  ord_calc(method = "PCA") %>%
  ord_plot(
    alpha = 0.6, size = 2, color = "birth_mode",
    plot_taxa = 1:6, tax_vec_length = 0.275,
    tax_lab_style = tax_lab_style(
      type = "text", max_angle = 90, aspect_ratio = 0.7,
      size = 3, fontface = "bold"
    ),
    ) +
  theme_classic(12) +
  coord_fixed(0.7)
pca
```

::: notes
How to interpret the taxa loading vectors?
Cautiously. 
There are plenty of caveats and nuance to the interpretation of these plots, which are called PCA bi-plots, and you can read more about here.

The relative length and direction of an arrow indicates how much that taxon contributes to the variation on each visible PC axis.
e.g.
Variation in Enterococcus contributes quite a lot to variation along the PC2 axis.

This allows you to infer that samples positioned at the bottom of the plot will tend to have higher relative abundance of Enterococcus than samples at the top of the plot.

Interestingly, samples on the right of the plot (which tend to be vaginally-delivered infants) seem to have relatively more Bifidobacterium, Bacteroides and Escherichia, whilst the C-section born infants have relatively more Veillonella.
:::

## PCA-sorted bar chart (iris plot)

```{r}
iris <- shao4 %>%
  tax_filter(min_prevalence = 2.5 / 100, verbose = FALSE) %>%
  tax_transform(rank = "genus", trans = "clr", zero_replace = "halfmin") %>%
  ord_calc(method = "PCA") %>%
  ord_plot_iris(
    tax_level = "genus", n_taxa = 10, other = "Other",
    anno_colour = "birth_mode", 
    anno_colour_style = list(alpha = 0.6, size = 0.6, show.legend = FALSE)
  )
```

```{r, fig.height=5.5, fig.width=10}
patchwork::wrap_plots(pca, iris, nrow = 1, guides = "collect")
```

::: notes 
We can make another kind of barplot now, using the PCA information to order our samples in a circular layout.
:::

# Differential Abundance {transition="convex"}

- like RNA Seq. Differential Expression
- but for microbial taxon abundances

::: notes
So far we have looked at patterns in microbiota data using multiple taxa at once.
You should start microbiome analysis with multivariate exploration and testing, with PCA, PERMANOVA and alpha diversity, to establish if there are any interesting overall microbiome differences in your microbiota data. If you find evidence from multivariate analyses, you don't need to stop there.
It is of course possible and interesting to also look at one taxon at a time.
:::

## Differential Abundance - aim {transition="convex"}

::: incremental

-   Is experimental condition X associated with relative abundance of bacterial genus Y?
-   Is environmental exposure X associated with ...?
-   Is host characteristic X associated with... ?

:::

## Differential Abundance - methods {.smaller transition="convex"}

::: incremental

- **Simple methods**: Wilcoxon tests, Spearman corr., Linear Reg.
- **CoDa methods**: ALDEx2, ANCOM-II, ANCOM-BC
- **RNA seq. methods**: DESeq2, limma, edgeR
- **Other**: LEfSe, Beta-binomial reg., ZINB reg., ZIGDM reg., ...!

:::

::: fragment

![](images/Nearing-preprint-disturbing.png)

:::

## Differential Abundance - which rank? {transition="convex"}

```{r}
shao19 %>%
  tax_fix() %>%
  tax_prepend_ranks(sep = "_") %>%
  tax_transform(rank = NA, trans = "compositional") %>%
  tax_filter(min_prevalence = 0.1, undetected = 0, use_counts = FALSE) %>%
  tax_mutate(unique = NULL) %>% 
  taxatree_plotkey(
    circular = FALSE, .draw_label = FALSE,
    rank %in% c("phylum", "class", "order", "family", "genus")
  ) %>% 
  taxatree_plot_labels(
    circular = FALSE, 
    taxon_renamer = function(x) stringr::str_remove(x, "[pcofg]_"),
    hjust = 0.5, force = 0, nudge_y = 0, size = 1.75
  )  + 
  coord_flip() + 
  scale_y_reverse() +
  theme(plot.title = element_blank())
```

::: notes
As well as choosing the statistical method, you also need to choose a rank
at which to aggregate your taxa before differential abundance testing. 
:::

## Differential Abundance with microViz {transition="convex"}

Keep it simple (-ish)

::: incremental

-  Filter out rare taxa strictly (>5% prev or more)

-  Linear regression models
    -  Log2 transform of taxon proportions
    -  (approach borrowed from Maaslin2)

-  Model every taxon, at all ranks!
    -  Visualize on a cladogram tree

:::

## Differential Abundance {transition="convex"}

![](images/trees.png)

::: notes
Here is an example of visualizing the results of many statistical tests on a cladogram structure.
The grey tree with labels on this side is just a key, so you know which taxa are which.
Each node represents a taxon, the nodes close to the center are the phyla, and around the edge are the 
genera, in this case, which all the other ranks in between on the concentric circles (which are probably too faint to see on the screen)

The smaller plots with colours, show the results of many statistical tests. Each covariate in the 
statistical models gets its own tree. So in this example that's only birth mode, and the age of the infant when the sample was taken. The colour of each node (each taxon) represents the direction and strength of that taxon's association with that covariate. So the blue branch up there, representing 
Bacteroidetes phylum and genera inside that phylum, they're negatively associated with C-section birth.
You can also add markers for statistical significance, which in this case is unadjusted p-values < 0.05, although that should really be FDR corrected p-values!
:::

## Your turn {transition="convex" .smaller}

-   Link to exercises guidance: <https://david-barnett.github.io/evomics-material/exercises/microViz-3-transformations-PCA-DA-exercises>

-   Try out making heatmaps and PCA biplots, with transformed abundance data.

See Gloor 2017 [Microbiome Datasets Are Compositional: And This Is Not Optional](https://doi.org/10.3389/fmicb.2017.02224)

-   Try out differential abundance testing and creating taxonomic association tree plots

Nearing 2021 is a great intro to the Differential Abundance topic/problem:
<https://www.nature.com/articles/s41467-022-28034-z>

-   This is the last topic - thank you for your attention and effort :)
